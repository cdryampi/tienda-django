name: Django CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.6'

      - name: Install system dependencies for Pillow
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libjpeg-dev \
            zlib1g-dev \
            libtiff-dev \
            libfreetype6-dev \
            liblcms2-dev \
            libwebp-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            tcl-dev \
            tk-dev

      - name: Install getText
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gettext
  
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: until pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; do sleep 1; done

      - name: Run Django tests
        env:
          DJANGO_SETTINGS_MODULE: tienda.settings
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}

        run: |
          python manage.py migrate

      - name: Create Anonymous User
        run: python manage.py shell -c "from django.contrib.auth.models import User; User.objects.get_or_create(username='AnonymousUser')"
      
      - name: Add Superuser and Sample Users
        run: python manage.py add_super_user_and_sample_users

      - name: Add Test Products
        run: python manage.py agregar_productos # Aqu√≠ se ejecuta el comando de productos de prueba

      - name: Run tests
        run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Asegura que el job de test pase antes de hacer el deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AWS_SSH_PRIVATE_KEY }}

      - name: Prepare permissions before pull
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            sudo chown -R ubuntu:www-data /home/ubuntu/tienda-django/media/
            sudo chmod -R 775 /home/ubuntu/tienda-django/media/
          EOF

      - name: Install npm dependencies
        run: |
          npm install

      - name: Copy Normalize and Materialize to static directory
        run: |
          mkdir -p static/css static/materialize/css static/materialize/js
          cp node_modules/normalize.css/normalize.css static/css/
          cp node_modules/materialize-css/dist/css/materialize.min.css static/materialize/css/
          cp node_modules/materialize-css/dist/js/materialize.min.js static/materialize/js/

      - name: Run Django collectstatic
        env:
          DJANGO_SETTINGS_MODULE: tienda.settings
        run: |
            ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} \
            'source /home/ubuntu/venv/bin/activate && cd /home/ubuntu/tienda-django && python manage.py collectstatic --noinput'
  

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            cd /home/ubuntu/tienda-django
            git pull origin main
            source /home/ubuntu/venv/bin/activate
            pip install -r requirements.txt
            python manage.py compilemessages
            python manage.py migrate
            python manage.py collectstatic --noinput --clear
            python manage.py create_initial_data

          EOF

      - name: Restore permissions after pull and restart Gunicorn
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_EC2_HOST }} << 'EOF'
            sudo chown -R www-data:www-data /home/ubuntu/tienda-django/media/
            sudo chown -R www-data:www-data /home/ubuntu/tienda-django/staticfiles/
            sudo chmod -R 775 /home/ubuntu/tienda-django/media/
            sudo chmod -R 775 /home/ubuntu/tienda-django/staticfiles/
            sudo chmod +x /home/ubuntu/tienda-django/scripts/reiniciar.sh
            cd /home/ubuntu/tienda-django/scripts
            ./reiniciar.sh
          EOF
